{"ast":null,"code":"var _jsxFileName = \"/Users/aniruddhaingle/collections-art/src/components/Poem.jsx\";\nimport { Typography } from \"@material-ui/core\";\nimport nextId from \"react-id-generator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Poem = ({\n  buttonId,\n  cards\n}) => {\n  console.log(buttonId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      gutterBottom: true,\n      variant: \"h1\",\n      children: [\" \", cards[buttonId][\"title\"]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), cards[buttonId][\"poem\"].map(line => /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: line\n    }, nextId(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 53\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Poem;\nexport default Poem;\n\nvar _c;\n\n$RefreshReg$(_c, \"Poem\");","map":{"version":3,"sources":["/Users/aniruddhaingle/collections-art/src/components/Poem.jsx"],"names":["Typography","nextId","Poem","buttonId","cards","console","log","map","line"],"mappings":";AAAA,SAASA,UAAT,QAA2B,mBAA3B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAAD,KAAuB;AAChCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,sBACI;AAAA,4BACI,QAAC,UAAD;AAAY,MAAA,YAAY,MAAxB;AAAyB,MAAA,OAAO,EAAC,IAAjC;AAAA,sBAAwCC,KAAK,CAACD,QAAD,CAAL,CAAgB,OAAhB,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKC,KAAK,CAACD,QAAD,CAAL,CAAgB,MAAhB,EAAwBI,GAAxB,CAA6BC,IAAD,iBAAW,QAAC,UAAD;AAA2B,MAAA,OAAO,EAAC,IAAnC;AAAA,gBAAyCA;AAAzC,OAAiBP,MAAM,EAAvB;AAAA;AAAA;AAAA;AAAA,YAAvC,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CARD;;KAAMC,I;AASN,eAAeA,IAAf","sourcesContent":["import { Typography } from \"@material-ui/core\";\nimport nextId from \"react-id-generator\";\n\nconst Poem = ({buttonId, cards}) => {\n    console.log(buttonId)\n    return ( \n        <div>\n            <Typography gutterBottom variant=\"h1\"> {cards[buttonId][\"title\"]}</Typography>\n            {cards[buttonId][\"poem\"].map((line) => (<Typography key={nextId()} variant=\"h5\">{line}</Typography>))}\n        </div>\n    );\n}\nexport default Poem;\n"]},"metadata":{},"sourceType":"module"}